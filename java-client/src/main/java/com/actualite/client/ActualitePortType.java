
package com.actualite.client;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ActualitePortType", targetNamespace = "http://localhost/news-platform-php/backend/api/soap_server.php")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface ActualitePortType {


    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "authenticateUser")
    @WebResult(name = "result", partName = "result")
    public String authenticateUser(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "listUsers")
    @WebResult(name = "result", partName = "result")
    public String listUsers(
        @WebParam(name = "token", partName = "token")
        String token);

    /**
     * 
     * @param userId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getUserById")
    @WebResult(name = "result", partName = "result")
    public String getUserById(
        @WebParam(name = "token", partName = "token")
        String token,
        @WebParam(name = "userId", partName = "userId")
        int userId);

    /**
     * 
     * @param userData
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "createUser")
    @WebResult(name = "result", partName = "result")
    public String createUser(
        @WebParam(name = "token", partName = "token")
        String token,
        @WebParam(name = "userData", partName = "userData")
        String userData);

    /**
     * 
     * @param userData
     * @param userId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "updateUser")
    @WebResult(name = "result", partName = "result")
    public String updateUser(
        @WebParam(name = "token", partName = "token")
        String token,
        @WebParam(name = "userId", partName = "userId")
        int userId,
        @WebParam(name = "userData", partName = "userData")
        String userData);

    /**
     * 
     * @param userId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "deleteUser")
    @WebResult(name = "result", partName = "result")
    public String deleteUser(
        @WebParam(name = "token", partName = "token")
        String token,
        @WebParam(name = "userId", partName = "userId")
        int userId);

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "logoutUser")
    @WebResult(name = "result", partName = "result")
    public String logoutUser(
        @WebParam(name = "token", partName = "token")
        String token);

}
